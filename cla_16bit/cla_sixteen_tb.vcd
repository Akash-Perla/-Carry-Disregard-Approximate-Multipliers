$date
	Fri Mar 15 15:51:46 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module cla_sixteen_tb $end
$var wire 16 ! S [15:0] $end
$var wire 1 " Cout $end
$var reg 16 # A [15:0] $end
$var reg 16 $ B [15:0] $end
$var reg 1 % Cin $end
$var integer 32 & file_id [31:0] $end
$var integer 32 ' i [31:0] $end
$var integer 32 ( j [31:0] $end
$scope module uut $end
$var wire 16 ) A [15:0] $end
$var wire 16 * B [15:0] $end
$var wire 1 % Cin $end
$var wire 16 + S [15:0] $end
$var wire 1 " Cout $end
$var wire 3 , C [3:1] $end
$scope module F0_3 $end
$var wire 4 - A [3:0] $end
$var wire 4 . B [3:0] $end
$var wire 1 % Cin $end
$var wire 1 / Cout $end
$var wire 1 0 tmp1 $end
$var wire 1 1 tmp10 $end
$var wire 1 2 tmp2 $end
$var wire 1 3 tmp3 $end
$var wire 1 4 tmp4 $end
$var wire 1 5 tmp5 $end
$var wire 1 6 tmp6 $end
$var wire 1 7 tmp7 $end
$var wire 1 8 tmp8 $end
$var wire 1 9 tmp9 $end
$var wire 4 : S [3:0] $end
$var wire 4 ; P [0:3] $end
$var wire 4 < G [0:3] $end
$var wire 3 = C [3:1] $end
$upscope $end
$scope module F12_15 $end
$var wire 4 > A [3:0] $end
$var wire 4 ? B [3:0] $end
$var wire 1 @ Cin $end
$var wire 1 " Cout $end
$var wire 1 A tmp1 $end
$var wire 1 B tmp10 $end
$var wire 1 C tmp2 $end
$var wire 1 D tmp3 $end
$var wire 1 E tmp4 $end
$var wire 1 F tmp5 $end
$var wire 1 G tmp6 $end
$var wire 1 H tmp7 $end
$var wire 1 I tmp8 $end
$var wire 1 J tmp9 $end
$var wire 4 K S [3:0] $end
$var wire 4 L P [0:3] $end
$var wire 4 M G [0:3] $end
$var wire 3 N C [3:1] $end
$upscope $end
$scope module F4_7 $end
$var wire 4 O A [3:0] $end
$var wire 4 P B [3:0] $end
$var wire 1 Q Cin $end
$var wire 1 R Cout $end
$var wire 1 S tmp1 $end
$var wire 1 T tmp10 $end
$var wire 1 U tmp2 $end
$var wire 1 V tmp3 $end
$var wire 1 W tmp4 $end
$var wire 1 X tmp5 $end
$var wire 1 Y tmp6 $end
$var wire 1 Z tmp7 $end
$var wire 1 [ tmp8 $end
$var wire 1 \ tmp9 $end
$var wire 4 ] S [3:0] $end
$var wire 4 ^ P [0:3] $end
$var wire 4 _ G [0:3] $end
$var wire 3 ` C [3:1] $end
$upscope $end
$scope module F8_11 $end
$var wire 4 a A [3:0] $end
$var wire 4 b B [3:0] $end
$var wire 1 c Cin $end
$var wire 1 d Cout $end
$var wire 1 e tmp1 $end
$var wire 1 f tmp10 $end
$var wire 1 g tmp2 $end
$var wire 1 h tmp3 $end
$var wire 1 i tmp4 $end
$var wire 1 j tmp5 $end
$var wire 1 k tmp6 $end
$var wire 1 l tmp7 $end
$var wire 1 m tmp8 $end
$var wire 1 n tmp9 $end
$var wire 4 o S [3:0] $end
$var wire 4 p P [0:3] $end
$var wire 4 q G [0:3] $end
$var wire 3 r C [3:1] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 r
b0 q
b0 p
b0 o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
09
08
07
06
05
04
03
02
01
00
0/
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b10000000000000000000000000000011 &
0%
b0 $
b0 #
0"
b0 !
$end
#10
b1 !
b1 +
b1 :
b1000 ;
b1 .
b1 $
b1 *
b1 (
#20
b10 !
b10 +
b10 :
b100 ;
b10 .
b10 $
b10 *
b10 (
#30
b11 !
b11 +
b11 :
b1100 ;
b11 .
b11 $
b11 *
b11 (
#40
b100 !
b100 +
b100 :
b10 ;
b100 .
b100 $
b100 *
b100 (
#50
b101 !
b101 +
b101 :
b1010 ;
b101 .
b101 $
b101 *
b101 (
#60
b110 !
b110 +
b110 :
b110 ;
b110 .
b110 $
b110 *
b110 (
#70
b111 !
b111 +
b111 :
b1110 ;
b111 .
b111 $
b111 *
b111 (
#80
b1000 !
b1000 +
b1000 :
b1 ;
b1000 .
b1000 $
b1000 *
b1000 (
#90
b1001 !
b1001 +
b1001 :
b1001 ;
b1001 .
b1001 $
b1001 *
b1001 (
#100
b1010 !
b1010 +
b1010 :
b101 ;
b1010 .
b1010 $
b1010 *
b1010 (
#110
b1011 !
b1011 +
b1011 :
b1101 ;
b1011 .
b1011 $
b1011 *
b1011 (
#120
b1100 !
b1100 +
b1100 :
b11 ;
b1100 .
b1100 $
b1100 *
b1100 (
#130
b1101 !
b1101 +
b1101 :
b1011 ;
b1101 .
b1101 $
b1101 *
b1101 (
#140
b1110 !
b1110 +
b1110 :
b111 ;
b1110 .
b1110 $
b1110 *
b1110 (
#150
b1111 !
b1111 +
b1111 :
b1111 ;
b1111 .
b1111 $
b1111 *
b1111 (
#160
b0 :
b10000 !
b10000 +
b1 ]
b0 ;
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#170
b10001 !
b10001 +
b1 :
b1000 ;
b1 .
b10001 $
b10001 *
b10001 (
#180
b10010 !
b10010 +
b10 :
b100 ;
b10 .
b10010 $
b10010 *
b10010 (
#190
b10011 !
b10011 +
b11 :
b1100 ;
b11 .
b10011 $
b10011 *
b10011 (
#200
b1 :
b1 !
b1 +
b0 ]
b1000 ;
b0 ^
b0 .
b0 P
b1 -
b0 $
b0 *
b1 #
b1 )
b1 '
b0 (
#210
b10 !
b10 +
b10 :
b1 =
b0 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#220
b11 !
b11 +
b11 :
b0 =
b1100 ;
b0 <
b10 .
b10 $
b10 *
b10 (
#230
b100 !
b100 +
b100 :
b11 =
12
b100 ;
b1000 <
b11 .
b11 $
b11 *
b11 (
#240
b101 !
b101 +
b101 :
b0 =
02
b1010 ;
b0 <
b100 .
b100 $
b100 *
b100 (
#250
b110 !
b110 +
b110 :
b1 =
b10 ;
b1000 <
b101 .
b101 $
b101 *
b101 (
#260
b111 !
b111 +
b111 :
b0 =
b1110 ;
b0 <
b110 .
b110 $
b110 *
b110 (
#270
b1000 !
b1000 +
b1000 :
b111 =
12
15
b110 ;
b1000 <
b111 .
b111 $
b111 *
b111 (
#280
b1001 !
b1001 +
b1001 :
b0 =
02
05
b1001 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#290
b1010 !
b1010 +
b1010 :
b1 =
b1 ;
b1000 <
b1001 .
b1001 $
b1001 *
b1001 (
#300
b1011 !
b1011 +
b1011 :
b0 =
b1101 ;
b0 <
b1010 .
b1010 $
b1010 *
b1010 (
#310
b1100 !
b1100 +
b1100 :
b11 =
12
b101 ;
b1000 <
b1011 .
b1011 $
b1011 *
b1011 (
#320
b1101 !
b1101 +
b1101 :
b0 =
02
b1011 ;
b0 <
b1100 .
b1100 $
b1100 *
b1100 (
#330
b1110 !
b1110 +
b1110 :
b1 =
b11 ;
b1000 <
b1101 .
b1101 $
b1101 *
b1101 (
#340
b1111 !
b1111 +
b1111 :
b0 =
b1111 ;
b0 <
b1110 .
b1110 $
b1110 *
b1110 (
#350
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b1111 .
b1111 $
b1111 *
b1111 (
#360
0Q
b0 ,
0/
b0 `
b1 :
b0 =
02
05
09
0S
b10001 !
b10001 +
b1 ]
b1000 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#370
b10010 !
b10010 +
b10 :
b1 =
b0 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#380
b10011 !
b10011 +
b11 :
b0 =
b1100 ;
b0 <
b10 .
b10010 $
b10010 *
b10010 (
#390
b10100 !
b10100 +
b100 :
b11 =
12
b100 ;
b1000 <
b11 .
b10011 $
b10011 *
b10011 (
#400
b10 :
b10 !
b10 +
b0 ]
b0 =
02
b0 ^
b0 <
b0 .
b0 P
b10 -
b0 $
b0 *
b10 #
b10 )
b10 '
b0 (
#410
b11 !
b11 +
b11 :
b1100 ;
b1 .
b1 $
b1 *
b1 (
#420
b100 !
b100 +
b100 :
b10 =
b0 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#430
b101 !
b101 +
b101 :
b1000 ;
b11 .
b11 $
b11 *
b11 (
#440
b110 !
b110 +
b110 :
b0 =
b110 ;
b0 <
b100 .
b100 $
b100 *
b100 (
#450
b111 !
b111 +
b111 :
b1110 ;
b101 .
b101 $
b101 *
b101 (
#460
b1000 !
b1000 +
b1000 :
b110 =
14
b10 ;
b100 <
b110 .
b110 $
b110 *
b110 (
#470
b1001 !
b1001 +
b1001 :
b1010 ;
b111 .
b111 $
b111 *
b111 (
#480
b1010 !
b1010 +
b1010 :
b0 =
04
b101 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#490
b1011 !
b1011 +
b1011 :
b1101 ;
b1001 .
b1001 $
b1001 *
b1001 (
#500
b1100 !
b1100 +
b1100 :
b10 =
b1 ;
b100 <
b1010 .
b1010 $
b1010 *
b1010 (
#510
b1101 !
b1101 +
b1101 :
b1001 ;
b1011 .
b1011 $
b1011 *
b1011 (
#520
b1110 !
b1110 +
b1110 :
b0 =
b111 ;
b0 <
b1100 .
b1100 $
b1100 *
b1100 (
#530
b1111 !
b1111 +
b1111 :
b1111 ;
b1101 .
b1101 $
b1101 *
b1101 (
#540
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b110 =
14
18
b11 ;
b100 <
b1110 .
b1110 $
b1110 *
b1110 (
#550
b10001 !
b10001 +
b1 :
b1011 ;
b1111 .
b1111 $
b1111 *
b1111 (
#560
0Q
b0 ,
0/
b0 `
b10 :
b0 =
04
08
0S
b10010 !
b10010 +
b1 ]
b100 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#570
b10011 !
b10011 +
b11 :
b1100 ;
b1 .
b10001 $
b10001 *
b10001 (
#580
b10100 !
b10100 +
b100 :
b10 =
b0 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#590
b10101 !
b10101 +
b101 :
b1000 ;
b11 .
b10011 $
b10011 *
b10011 (
#600
b11 :
b0 =
b11 !
b11 +
b0 ]
b1100 ;
b0 <
b0 ^
b0 .
b0 P
b11 -
b0 $
b0 *
b11 #
b11 )
b11 '
b0 (
#610
b100 !
b100 +
b100 :
b11 =
12
b100 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#620
b101 !
b101 +
b101 :
b10 =
02
b1000 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#630
b110 !
b110 +
b110 :
b11 =
b0 ;
b1100 <
b11 .
b11 $
b11 *
b11 (
#640
b111 !
b111 +
b111 :
b0 =
b1110 ;
b0 <
b100 .
b100 $
b100 *
b100 (
#650
b1000 !
b1000 +
b1000 :
b111 =
12
15
b110 ;
b1000 <
b101 .
b101 $
b101 *
b101 (
#660
b1001 !
b1001 +
b1001 :
b110 =
02
05
14
b1010 ;
b100 <
b110 .
b110 $
b110 *
b110 (
#670
b1010 !
b1010 +
b1010 :
b111 =
b10 ;
b1100 <
b111 .
b111 $
b111 *
b111 (
#680
b1011 !
b1011 +
b1011 :
b0 =
04
b1101 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#690
b1100 !
b1100 +
b1100 :
b11 =
12
b101 ;
b1000 <
b1001 .
b1001 $
b1001 *
b1001 (
#700
b1101 !
b1101 +
b1101 :
b10 =
02
b1001 ;
b100 <
b1010 .
b1010 $
b1010 *
b1010 (
#710
b1110 !
b1110 +
b1110 :
b11 =
b1 ;
b1100 <
b1011 .
b1011 $
b1011 *
b1011 (
#720
b1111 !
b1111 +
b1111 :
b0 =
b1111 ;
b0 <
b1100 .
b1100 $
b1100 *
b1100 (
#730
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b1101 .
b1101 $
b1101 *
b1101 (
#740
b10001 !
b10001 +
b1 :
b110 =
02
05
09
14
18
b1011 ;
b100 <
b1110 .
b1110 $
b1110 *
b1110 (
#750
b10010 !
b10010 +
b10 :
b111 =
b11 ;
b1100 <
b1111 .
b1111 $
b1111 *
b1111 (
#760
0Q
b0 ,
0/
b0 `
b11 :
b0 =
04
08
0S
b10011 !
b10011 +
b1 ]
b1100 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#770
b10100 !
b10100 +
b100 :
b11 =
12
b100 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#780
b10101 !
b10101 +
b101 :
b10 =
02
b1000 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#790
b10110 !
b10110 +
b110 :
b11 =
b0 ;
b1100 <
b11 .
b10011 $
b10011 *
b10011 (
#800
b0 ]
b100 !
b100 +
b100 :
b0 =
b0 ^
b10 ;
b0 <
b0 .
b0 P
b100 -
b0 $
b0 *
b100 #
b100 )
b100 '
b0 (
#810
b101 !
b101 +
b101 :
b1010 ;
b1 .
b1 $
b1 *
b1 (
#820
b110 !
b110 +
b110 :
b110 ;
b10 .
b10 $
b10 *
b10 (
#830
b111 !
b111 +
b111 :
b1110 ;
b11 .
b11 $
b11 *
b11 (
#840
b1000 !
b1000 +
b1000 :
b100 =
b0 ;
b10 <
b100 .
b100 $
b100 *
b100 (
#850
b1001 !
b1001 +
b1001 :
b1000 ;
b101 .
b101 $
b101 *
b101 (
#860
b1010 !
b1010 +
b1010 :
b100 ;
b110 .
b110 $
b110 *
b110 (
#870
b1011 !
b1011 +
b1011 :
b1100 ;
b111 .
b111 $
b111 *
b111 (
#880
b1100 !
b1100 +
b1100 :
b0 =
b11 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#890
b1101 !
b1101 +
b1101 :
b1011 ;
b1001 .
b1001 $
b1001 *
b1001 (
#900
b1110 !
b1110 +
b1110 :
b111 ;
b1010 .
b1010 $
b1010 *
b1010 (
#910
b1111 !
b1111 +
b1111 :
b1111 ;
b1011 .
b1011 $
b1011 *
b1011 (
#920
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b100 =
17
b1 ;
b10 <
b1100 .
b1100 $
b1100 *
b1100 (
#930
b10001 !
b10001 +
b1 :
b1001 ;
b1101 .
b1101 $
b1101 *
b1101 (
#940
b10010 !
b10010 +
b10 :
b101 ;
b1110 .
b1110 $
b1110 *
b1110 (
#950
b10011 !
b10011 +
b11 :
b1101 ;
b1111 .
b1111 $
b1111 *
b1111 (
#960
0Q
b0 ,
0/
b0 `
b100 :
b0 =
07
0S
b10100 !
b10100 +
b1 ]
b10 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#970
b10101 !
b10101 +
b101 :
b1010 ;
b1 .
b10001 $
b10001 *
b10001 (
#980
b10110 !
b10110 +
b110 :
b110 ;
b10 .
b10010 $
b10010 *
b10010 (
#990
b10111 !
b10111 +
b111 :
b1110 ;
b11 .
b10011 $
b10011 *
b10011 (
#1000
b101 :
b101 !
b101 +
b0 ]
b1010 ;
b0 ^
b0 .
b0 P
b101 -
b0 $
b0 *
b101 #
b101 )
b101 '
b0 (
#1010
b110 !
b110 +
b110 :
b1 =
b10 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#1020
b111 !
b111 +
b111 :
b0 =
b1110 ;
b0 <
b10 .
b10 $
b10 *
b10 (
#1030
b1000 !
b1000 +
b1000 :
b111 =
12
15
b110 ;
b1000 <
b11 .
b11 $
b11 *
b11 (
#1040
b1001 !
b1001 +
b1001 :
b100 =
02
05
b1000 ;
b10 <
b100 .
b100 $
b100 *
b100 (
#1050
b1010 !
b1010 +
b1010 :
b101 =
b0 ;
b1010 <
b101 .
b101 $
b101 *
b101 (
#1060
b1011 !
b1011 +
b1011 :
b100 =
b1100 ;
b10 <
b110 .
b110 $
b110 *
b110 (
#1070
b1100 !
b1100 +
b1100 :
b111 =
12
b100 ;
b1010 <
b111 .
b111 $
b111 *
b111 (
#1080
b1101 !
b1101 +
b1101 :
02
b0 =
b1011 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#1090
b1110 !
b1110 +
b1110 :
b1 =
b11 ;
b1000 <
b1001 .
b1001 $
b1001 *
b1001 (
#1100
b1111 !
b1111 +
b1111 :
b0 =
b1111 ;
b0 <
b1010 .
b1010 $
b1010 *
b1010 (
#1110
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b1011 .
b1011 $
b1011 *
b1011 (
#1120
b10001 !
b10001 +
b1 :
b100 =
02
05
09
17
b1001 ;
b10 <
b1100 .
b1100 $
b1100 *
b1100 (
#1130
b10010 !
b10010 +
b10 :
b101 =
b1 ;
b1010 <
b1101 .
b1101 $
b1101 *
b1101 (
#1140
b10011 !
b10011 +
b11 :
b100 =
b1101 ;
b10 <
b1110 .
b1110 $
b1110 *
b1110 (
#1150
b10100 !
b10100 +
b100 :
b111 =
12
b101 ;
b1010 <
b1111 .
b1111 $
b1111 *
b1111 (
#1160
0Q
b0 ,
0/
b0 `
b101 :
02
b0 =
07
0S
b10101 !
b10101 +
b1 ]
b1010 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#1170
b10110 !
b10110 +
b110 :
b1 =
b10 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#1180
b10111 !
b10111 +
b111 :
b0 =
b1110 ;
b0 <
b10 .
b10010 $
b10010 *
b10010 (
#1190
b11000 !
b11000 +
b1000 :
b111 =
12
15
b110 ;
b1000 <
b11 .
b10011 $
b10011 *
b10011 (
#1200
b110 :
b110 !
b110 +
b0 ]
b0 =
02
05
b0 ^
b0 <
b0 .
b0 P
b110 -
b0 $
b0 *
b110 #
b110 )
b110 '
b0 (
#1210
b111 !
b111 +
b111 :
b1110 ;
b1 .
b1 $
b1 *
b1 (
#1220
b1000 !
b1000 +
b1000 :
b110 =
14
b10 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#1230
b1001 !
b1001 +
b1001 :
b1010 ;
b11 .
b11 $
b11 *
b11 (
#1240
b1010 !
b1010 +
b1010 :
b100 =
04
b100 ;
b10 <
b100 .
b100 $
b100 *
b100 (
#1250
b1011 !
b1011 +
b1011 :
b1100 ;
b101 .
b101 $
b101 *
b101 (
#1260
b1100 !
b1100 +
b1100 :
b110 =
b0 ;
b110 <
b110 .
b110 $
b110 *
b110 (
#1270
b1101 !
b1101 +
b1101 :
b1000 ;
b111 .
b111 $
b111 *
b111 (
#1280
b1110 !
b1110 +
b1110 :
b0 =
b111 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#1290
b1111 !
b1111 +
b1111 :
b1111 ;
b1001 .
b1001 $
b1001 *
b1001 (
#1300
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b110 =
14
18
b11 ;
b100 <
b1010 .
b1010 $
b1010 *
b1010 (
#1310
b10001 !
b10001 +
b1 :
b1011 ;
b1011 .
b1011 $
b1011 *
b1011 (
#1320
b10010 !
b10010 +
b10 :
b100 =
04
08
17
b101 ;
b10 <
b1100 .
b1100 $
b1100 *
b1100 (
#1330
b10011 !
b10011 +
b11 :
b1101 ;
b1101 .
b1101 $
b1101 *
b1101 (
#1340
b10100 !
b10100 +
b100 :
b110 =
b1 ;
b110 <
b1110 .
b1110 $
b1110 *
b1110 (
#1350
b10101 !
b10101 +
b101 :
b1001 ;
b1111 .
b1111 $
b1111 *
b1111 (
#1360
0Q
b0 ,
0/
b0 `
b110 :
b0 =
07
0S
b10110 !
b10110 +
b1 ]
b110 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#1370
b10111 !
b10111 +
b111 :
b1110 ;
b1 .
b10001 $
b10001 *
b10001 (
#1380
b11000 !
b11000 +
b1000 :
b110 =
14
b10 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#1390
b11001 !
b11001 +
b1001 :
b1010 ;
b11 .
b10011 $
b10011 *
b10011 (
#1400
b111 :
b0 =
04
b111 !
b111 +
b0 ]
b1110 ;
b0 <
b0 ^
b0 .
b0 P
b111 -
b0 $
b0 *
b111 #
b111 )
b111 '
b0 (
#1410
b1000 !
b1000 +
b1000 :
b111 =
12
15
b110 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#1420
b1001 !
b1001 +
b1001 :
b110 =
02
05
14
b1010 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#1430
b1010 !
b1010 +
b1010 :
b111 =
b10 ;
b1100 <
b11 .
b11 $
b11 *
b11 (
#1440
b1011 !
b1011 +
b1011 :
b100 =
04
b1100 ;
b10 <
b100 .
b100 $
b100 *
b100 (
#1450
b1100 !
b1100 +
b1100 :
b111 =
12
b100 ;
b1010 <
b101 .
b101 $
b101 *
b101 (
#1460
b1101 !
b1101 +
b1101 :
b110 =
02
b1000 ;
b110 <
b110 .
b110 $
b110 *
b110 (
#1470
b1110 !
b1110 +
b1110 :
b111 =
b0 ;
b1110 <
b111 .
b111 $
b111 *
b111 (
#1480
b1111 !
b1111 +
b1111 :
b0 =
b1111 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#1490
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b1001 .
b1001 $
b1001 *
b1001 (
#1500
b10001 !
b10001 +
b1 :
b110 =
02
05
09
14
18
b1011 ;
b100 <
b1010 .
b1010 $
b1010 *
b1010 (
#1510
b10010 !
b10010 +
b10 :
b111 =
b11 ;
b1100 <
b1011 .
b1011 $
b1011 *
b1011 (
#1520
b10011 !
b10011 +
b11 :
b100 =
04
08
17
b1101 ;
b10 <
b1100 .
b1100 $
b1100 *
b1100 (
#1530
b10100 !
b10100 +
b100 :
b111 =
12
b101 ;
b1010 <
b1101 .
b1101 $
b1101 *
b1101 (
#1540
b10101 !
b10101 +
b101 :
b110 =
02
b1001 ;
b110 <
b1110 .
b1110 $
b1110 *
b1110 (
#1550
b10110 !
b10110 +
b110 :
b111 =
b1 ;
b1110 <
b1111 .
b1111 $
b1111 *
b1111 (
#1560
0Q
b0 ,
0/
b0 `
b111 :
b0 =
07
0S
b10111 !
b10111 +
b1 ]
b1110 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#1570
b11000 !
b11000 +
b1000 :
b111 =
12
15
b110 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#1580
b11001 !
b11001 +
b1001 :
b110 =
02
05
14
b1010 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#1590
b11010 !
b11010 +
b1010 :
b111 =
b10 ;
b1100 <
b11 .
b10011 $
b10011 *
b10011 (
#1600
b0 ]
b1000 !
b1000 +
b1000 :
b0 =
04
b0 ^
b1 ;
b0 <
b0 .
b0 P
b1000 -
b0 $
b0 *
b1000 #
b1000 )
b1000 '
b0 (
#1610
b1001 !
b1001 +
b1001 :
b1001 ;
b1 .
b1 $
b1 *
b1 (
#1620
b1010 !
b1010 +
b1010 :
b101 ;
b10 .
b10 $
b10 *
b10 (
#1630
b1011 !
b1011 +
b1011 :
b1101 ;
b11 .
b11 $
b11 *
b11 (
#1640
b1100 !
b1100 +
b1100 :
b11 ;
b100 .
b100 $
b100 *
b100 (
#1650
b1101 !
b1101 +
b1101 :
b1011 ;
b101 .
b101 $
b101 *
b101 (
#1660
b1110 !
b1110 +
b1110 :
b111 ;
b110 .
b110 $
b110 *
b110 (
#1670
b1111 !
b1111 +
b1111 :
b1111 ;
b111 .
b111 $
b111 *
b111 (
#1680
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b0 ;
b1 <
b1000 .
b1000 $
b1000 *
b1000 (
#1690
b10001 !
b10001 +
b1 :
b1000 ;
b1001 .
b1001 $
b1001 *
b1001 (
#1700
b10010 !
b10010 +
b10 :
b100 ;
b1010 .
b1010 $
b1010 *
b1010 (
#1710
b10011 !
b10011 +
b11 :
b1100 ;
b1011 .
b1011 $
b1011 *
b1011 (
#1720
b10100 !
b10100 +
b100 :
b10 ;
b1100 .
b1100 $
b1100 *
b1100 (
#1730
b10101 !
b10101 +
b101 :
b1010 ;
b1101 .
b1101 $
b1101 *
b1101 (
#1740
b10110 !
b10110 +
b110 :
b110 ;
b1110 .
b1110 $
b1110 *
b1110 (
#1750
b10111 !
b10111 +
b111 :
b1110 ;
b1111 .
b1111 $
b1111 *
b1111 (
#1760
0Q
b0 ,
0/
b0 `
b1000 :
0S
b11000 !
b11000 +
b1 ]
b1 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#1770
b11001 !
b11001 +
b1001 :
b1001 ;
b1 .
b10001 $
b10001 *
b10001 (
#1780
b11010 !
b11010 +
b1010 :
b101 ;
b10 .
b10010 $
b10010 *
b10010 (
#1790
b11011 !
b11011 +
b1011 :
b1101 ;
b11 .
b10011 $
b10011 *
b10011 (
#1800
b1001 :
b1001 !
b1001 +
b0 ]
b1001 ;
b0 ^
b0 .
b0 P
b1001 -
b0 $
b0 *
b1001 #
b1001 )
b1001 '
b0 (
#1810
b1010 !
b1010 +
b1010 :
b1 =
b1 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#1820
b1011 !
b1011 +
b1011 :
b0 =
b1101 ;
b0 <
b10 .
b10 $
b10 *
b10 (
#1830
b1100 !
b1100 +
b1100 :
b11 =
12
b101 ;
b1000 <
b11 .
b11 $
b11 *
b11 (
#1840
b1101 !
b1101 +
b1101 :
b0 =
02
b1011 ;
b0 <
b100 .
b100 $
b100 *
b100 (
#1850
b1110 !
b1110 +
b1110 :
b1 =
b11 ;
b1000 <
b101 .
b101 $
b101 *
b101 (
#1860
b1111 !
b1111 +
b1111 :
b0 =
b1111 ;
b0 <
b110 .
b110 $
b110 *
b110 (
#1870
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b111 .
b111 $
b111 *
b111 (
#1880
b10001 !
b10001 +
b1 :
b0 =
02
05
09
b1000 ;
b1 <
b1000 .
b1000 $
b1000 *
b1000 (
#1890
b10010 !
b10010 +
b10 :
b1 =
b0 ;
b1001 <
b1001 .
b1001 $
b1001 *
b1001 (
#1900
b10011 !
b10011 +
b11 :
b0 =
b1100 ;
b1 <
b1010 .
b1010 $
b1010 *
b1010 (
#1910
b10100 !
b10100 +
b100 :
b11 =
12
b100 ;
b1001 <
b1011 .
b1011 $
b1011 *
b1011 (
#1920
b10101 !
b10101 +
b101 :
b0 =
02
b1010 ;
b1 <
b1100 .
b1100 $
b1100 *
b1100 (
#1930
b10110 !
b10110 +
b110 :
b1 =
b10 ;
b1001 <
b1101 .
b1101 $
b1101 *
b1101 (
#1940
b10111 !
b10111 +
b111 :
b0 =
b1110 ;
b1 <
b1110 .
b1110 $
b1110 *
b1110 (
#1950
b11000 !
b11000 +
b1000 :
b111 =
12
15
b110 ;
b1001 <
b1111 .
b1111 $
b1111 *
b1111 (
#1960
0Q
b0 ,
0/
b0 `
b1001 :
b0 =
02
05
0S
b11001 !
b11001 +
b1 ]
b1001 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#1970
b11010 !
b11010 +
b1010 :
b1 =
b1 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#1980
b11011 !
b11011 +
b1011 :
b0 =
b1101 ;
b0 <
b10 .
b10010 $
b10010 *
b10010 (
#1990
b11100 !
b11100 +
b1100 :
b11 =
12
b101 ;
b1000 <
b11 .
b10011 $
b10011 *
b10011 (
#2000
b1010 :
b1010 !
b1010 +
b0 ]
b0 =
02
b0 ^
b0 <
b0 .
b0 P
b1010 -
b0 $
b0 *
b1010 #
b1010 )
b1010 '
b0 (
#2010
b1011 !
b1011 +
b1011 :
b1101 ;
b1 .
b1 $
b1 *
b1 (
#2020
b1100 !
b1100 +
b1100 :
b10 =
b1 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#2030
b1101 !
b1101 +
b1101 :
b1001 ;
b11 .
b11 $
b11 *
b11 (
#2040
b1110 !
b1110 +
b1110 :
b0 =
b111 ;
b0 <
b100 .
b100 $
b100 *
b100 (
#2050
b1111 !
b1111 +
b1111 :
b1111 ;
b101 .
b101 $
b101 *
b101 (
#2060
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b110 =
14
18
b11 ;
b100 <
b110 .
b110 $
b110 *
b110 (
#2070
b10001 !
b10001 +
b1 :
b1011 ;
b111 .
b111 $
b111 *
b111 (
#2080
b10010 !
b10010 +
b10 :
b0 =
04
08
b100 ;
b1 <
b1000 .
b1000 $
b1000 *
b1000 (
#2090
b10011 !
b10011 +
b11 :
b1100 ;
b1001 .
b1001 $
b1001 *
b1001 (
#2100
b10100 !
b10100 +
b100 :
b10 =
b0 ;
b101 <
b1010 .
b1010 $
b1010 *
b1010 (
#2110
b10101 !
b10101 +
b101 :
b1000 ;
b1011 .
b1011 $
b1011 *
b1011 (
#2120
b10110 !
b10110 +
b110 :
b0 =
b110 ;
b1 <
b1100 .
b1100 $
b1100 *
b1100 (
#2130
b10111 !
b10111 +
b111 :
b1110 ;
b1101 .
b1101 $
b1101 *
b1101 (
#2140
b11000 !
b11000 +
b1000 :
b110 =
14
b10 ;
b101 <
b1110 .
b1110 $
b1110 *
b1110 (
#2150
b11001 !
b11001 +
b1001 :
b1010 ;
b1111 .
b1111 $
b1111 *
b1111 (
#2160
0Q
b0 ,
0/
b0 `
b1010 :
b0 =
04
0S
b11010 !
b11010 +
b1 ]
b101 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#2170
b11011 !
b11011 +
b1011 :
b1101 ;
b1 .
b10001 $
b10001 *
b10001 (
#2180
b11100 !
b11100 +
b1100 :
b10 =
b1 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#2190
b11101 !
b11101 +
b1101 :
b1001 ;
b11 .
b10011 $
b10011 *
b10011 (
#2200
b1011 :
b0 =
b1011 !
b1011 +
b0 ]
b1101 ;
b0 <
b0 ^
b0 .
b0 P
b1011 -
b0 $
b0 *
b1011 #
b1011 )
b1011 '
b0 (
#2210
b1100 !
b1100 +
b1100 :
b11 =
12
b101 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#2220
b1101 !
b1101 +
b1101 :
b10 =
02
b1001 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#2230
b1110 !
b1110 +
b1110 :
b11 =
b1 ;
b1100 <
b11 .
b11 $
b11 *
b11 (
#2240
b1111 !
b1111 +
b1111 :
b0 =
b1111 ;
b0 <
b100 .
b100 $
b100 *
b100 (
#2250
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b101 .
b101 $
b101 *
b101 (
#2260
b10001 !
b10001 +
b1 :
b110 =
02
05
09
14
18
b1011 ;
b100 <
b110 .
b110 $
b110 *
b110 (
#2270
b10010 !
b10010 +
b10 :
b111 =
b11 ;
b1100 <
b111 .
b111 $
b111 *
b111 (
#2280
b10011 !
b10011 +
b11 :
b0 =
04
08
b1100 ;
b1 <
b1000 .
b1000 $
b1000 *
b1000 (
#2290
b10100 !
b10100 +
b100 :
b11 =
12
b100 ;
b1001 <
b1001 .
b1001 $
b1001 *
b1001 (
#2300
b10101 !
b10101 +
b101 :
b10 =
02
b1000 ;
b101 <
b1010 .
b1010 $
b1010 *
b1010 (
#2310
b10110 !
b10110 +
b110 :
b11 =
b0 ;
b1101 <
b1011 .
b1011 $
b1011 *
b1011 (
#2320
b10111 !
b10111 +
b111 :
b0 =
b1110 ;
b1 <
b1100 .
b1100 $
b1100 *
b1100 (
#2330
b11000 !
b11000 +
b1000 :
b111 =
12
15
b110 ;
b1001 <
b1101 .
b1101 $
b1101 *
b1101 (
#2340
b11001 !
b11001 +
b1001 :
b110 =
02
05
14
b1010 ;
b101 <
b1110 .
b1110 $
b1110 *
b1110 (
#2350
b11010 !
b11010 +
b1010 :
b111 =
b10 ;
b1101 <
b1111 .
b1111 $
b1111 *
b1111 (
#2360
0Q
b0 ,
0/
b0 `
b1011 :
b0 =
04
0S
b11011 !
b11011 +
b1 ]
b1101 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#2370
b11100 !
b11100 +
b1100 :
b11 =
12
b101 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#2380
b11101 !
b11101 +
b1101 :
b10 =
02
b1001 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#2390
b11110 !
b11110 +
b1110 :
b11 =
b1 ;
b1100 <
b11 .
b10011 $
b10011 *
b10011 (
#2400
b0 ]
b1100 !
b1100 +
b1100 :
b0 =
b0 ^
b11 ;
b0 <
b0 .
b0 P
b1100 -
b0 $
b0 *
b1100 #
b1100 )
b1100 '
b0 (
#2410
b1101 !
b1101 +
b1101 :
b1011 ;
b1 .
b1 $
b1 *
b1 (
#2420
b1110 !
b1110 +
b1110 :
b111 ;
b10 .
b10 $
b10 *
b10 (
#2430
b1111 !
b1111 +
b1111 :
b1111 ;
b11 .
b11 $
b11 *
b11 (
#2440
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b100 =
17
b1 ;
b10 <
b100 .
b100 $
b100 *
b100 (
#2450
b10001 !
b10001 +
b1 :
b1001 ;
b101 .
b101 $
b101 *
b101 (
#2460
b10010 !
b10010 +
b10 :
b101 ;
b110 .
b110 $
b110 *
b110 (
#2470
b10011 !
b10011 +
b11 :
b1101 ;
b111 .
b111 $
b111 *
b111 (
#2480
b10100 !
b10100 +
b100 :
b0 =
07
b10 ;
b1 <
b1000 .
b1000 $
b1000 *
b1000 (
#2490
b10101 !
b10101 +
b101 :
b1010 ;
b1001 .
b1001 $
b1001 *
b1001 (
#2500
b10110 !
b10110 +
b110 :
b110 ;
b1010 .
b1010 $
b1010 *
b1010 (
#2510
b10111 !
b10111 +
b111 :
b1110 ;
b1011 .
b1011 $
b1011 *
b1011 (
#2520
b11000 !
b11000 +
b1000 :
b100 =
b0 ;
b11 <
b1100 .
b1100 $
b1100 *
b1100 (
#2530
b11001 !
b11001 +
b1001 :
b1000 ;
b1101 .
b1101 $
b1101 *
b1101 (
#2540
b11010 !
b11010 +
b1010 :
b100 ;
b1110 .
b1110 $
b1110 *
b1110 (
#2550
b11011 !
b11011 +
b1011 :
b1100 ;
b1111 .
b1111 $
b1111 *
b1111 (
#2560
0Q
b0 ,
0/
b0 `
b1100 :
b0 =
0S
b11100 !
b11100 +
b1 ]
b11 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#2570
b11101 !
b11101 +
b1101 :
b1011 ;
b1 .
b10001 $
b10001 *
b10001 (
#2580
b11110 !
b11110 +
b1110 :
b111 ;
b10 .
b10010 $
b10010 *
b10010 (
#2590
b11111 !
b11111 +
b1111 :
b1111 ;
b11 .
b10011 $
b10011 *
b10011 (
#2600
b1101 :
b1101 !
b1101 +
b0 ]
b1011 ;
b0 ^
b0 .
b0 P
b1101 -
b0 $
b0 *
b1101 #
b1101 )
b1101 '
b0 (
#2610
b1110 !
b1110 +
b1110 :
b1 =
b11 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#2620
b1111 !
b1111 +
b1111 :
b0 =
b1111 ;
b0 <
b10 .
b10 $
b10 *
b10 (
#2630
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b11 .
b11 $
b11 *
b11 (
#2640
b10001 !
b10001 +
b1 :
b100 =
02
05
09
17
b1001 ;
b10 <
b100 .
b100 $
b100 *
b100 (
#2650
b10010 !
b10010 +
b10 :
b101 =
b1 ;
b1010 <
b101 .
b101 $
b101 *
b101 (
#2660
b10011 !
b10011 +
b11 :
b100 =
b1101 ;
b10 <
b110 .
b110 $
b110 *
b110 (
#2670
b10100 !
b10100 +
b100 :
b111 =
12
b101 ;
b1010 <
b111 .
b111 $
b111 *
b111 (
#2680
b10101 !
b10101 +
b101 :
02
b0 =
07
b1010 ;
b1 <
b1000 .
b1000 $
b1000 *
b1000 (
#2690
b10110 !
b10110 +
b110 :
b1 =
b10 ;
b1001 <
b1001 .
b1001 $
b1001 *
b1001 (
#2700
b10111 !
b10111 +
b111 :
b0 =
b1110 ;
b1 <
b1010 .
b1010 $
b1010 *
b1010 (
#2710
b11000 !
b11000 +
b1000 :
b111 =
12
15
b110 ;
b1001 <
b1011 .
b1011 $
b1011 *
b1011 (
#2720
b11001 !
b11001 +
b1001 :
b100 =
02
05
b1000 ;
b11 <
b1100 .
b1100 $
b1100 *
b1100 (
#2730
b11010 !
b11010 +
b1010 :
b101 =
b0 ;
b1011 <
b1101 .
b1101 $
b1101 *
b1101 (
#2740
b11011 !
b11011 +
b1011 :
b100 =
b1100 ;
b11 <
b1110 .
b1110 $
b1110 *
b1110 (
#2750
b11100 !
b11100 +
b1100 :
b111 =
12
b100 ;
b1011 <
b1111 .
b1111 $
b1111 *
b1111 (
#2760
0Q
b0 ,
0/
b0 `
b1101 :
02
b0 =
0S
b11101 !
b11101 +
b1 ]
b1011 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#2770
b11110 !
b11110 +
b1110 :
b1 =
b11 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#2780
b11111 !
b11111 +
b1111 :
b0 =
b1111 ;
b0 <
b10 .
b10010 $
b10010 *
b10010 (
#2790
b1 `
1S
b10 ]
1Q
b1 ,
1/
b100000 !
b100000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b11 .
b10011 $
b10011 *
b10011 (
#2800
0Q
b1110 :
b0 ,
0/
b0 `
0S
b1110 !
b1110 +
b0 ]
b0 =
02
05
09
b0 ^
b0 <
b0 .
b0 P
b1110 -
b0 $
b0 *
b1110 #
b1110 )
b1110 '
b0 (
#2810
b1111 !
b1111 +
b1111 :
b1111 ;
b1 .
b1 $
b1 *
b1 (
#2820
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b110 =
14
18
b11 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#2830
b10001 !
b10001 +
b1 :
b1011 ;
b11 .
b11 $
b11 *
b11 (
#2840
b10010 !
b10010 +
b10 :
b100 =
04
08
17
b101 ;
b10 <
b100 .
b100 $
b100 *
b100 (
#2850
b10011 !
b10011 +
b11 :
b1101 ;
b101 .
b101 $
b101 *
b101 (
#2860
b10100 !
b10100 +
b100 :
b110 =
b1 ;
b110 <
b110 .
b110 $
b110 *
b110 (
#2870
b10101 !
b10101 +
b101 :
b1001 ;
b111 .
b111 $
b111 *
b111 (
#2880
b10110 !
b10110 +
b110 :
b0 =
07
b110 ;
b1 <
b1000 .
b1000 $
b1000 *
b1000 (
#2890
b10111 !
b10111 +
b111 :
b1110 ;
b1001 .
b1001 $
b1001 *
b1001 (
#2900
b11000 !
b11000 +
b1000 :
b110 =
14
b10 ;
b101 <
b1010 .
b1010 $
b1010 *
b1010 (
#2910
b11001 !
b11001 +
b1001 :
b1010 ;
b1011 .
b1011 $
b1011 *
b1011 (
#2920
b11010 !
b11010 +
b1010 :
b100 =
04
b100 ;
b11 <
b1100 .
b1100 $
b1100 *
b1100 (
#2930
b11011 !
b11011 +
b1011 :
b1100 ;
b1101 .
b1101 $
b1101 *
b1101 (
#2940
b11100 !
b11100 +
b1100 :
b110 =
b0 ;
b111 <
b1110 .
b1110 $
b1110 *
b1110 (
#2950
b11101 !
b11101 +
b1101 :
b1000 ;
b1111 .
b1111 $
b1111 *
b1111 (
#2960
0Q
b0 ,
0/
b0 `
b1110 :
b0 =
0S
b11110 !
b11110 +
b1 ]
b111 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#2970
b11111 !
b11111 +
b1111 :
b1111 ;
b1 .
b10001 $
b10001 *
b10001 (
#2980
b1 `
1S
b10 ]
1Q
b1 ,
1/
b100000 !
b100000 +
b0 :
b110 =
14
18
b11 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#2990
b100001 !
b100001 +
b1 :
b1011 ;
b11 .
b10011 $
b10011 *
b10011 (
#3000
0Q
b0 ,
0/
b0 `
b1111 :
b0 =
04
08
0S
b1111 !
b1111 +
b0 ]
b1111 ;
b0 <
b0 ^
b0 .
b0 P
b1111 -
b0 $
b0 *
b1111 #
b1111 )
b1111 '
b0 (
#3010
b1 ]
1Q
b1 ,
1/
b10000 !
b10000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#3020
b10001 !
b10001 +
b1 :
b110 =
02
05
09
14
18
b1011 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#3030
b10010 !
b10010 +
b10 :
b111 =
b11 ;
b1100 <
b11 .
b11 $
b11 *
b11 (
#3040
b10011 !
b10011 +
b11 :
b100 =
04
08
17
b1101 ;
b10 <
b100 .
b100 $
b100 *
b100 (
#3050
b10100 !
b10100 +
b100 :
b111 =
12
b101 ;
b1010 <
b101 .
b101 $
b101 *
b101 (
#3060
b10101 !
b10101 +
b101 :
b110 =
02
b1001 ;
b110 <
b110 .
b110 $
b110 *
b110 (
#3070
b10110 !
b10110 +
b110 :
b111 =
b1 ;
b1110 <
b111 .
b111 $
b111 *
b111 (
#3080
b10111 !
b10111 +
b111 :
b0 =
07
b1110 ;
b1 <
b1000 .
b1000 $
b1000 *
b1000 (
#3090
b11000 !
b11000 +
b1000 :
b111 =
12
15
b110 ;
b1001 <
b1001 .
b1001 $
b1001 *
b1001 (
#3100
b11001 !
b11001 +
b1001 :
b110 =
02
05
14
b1010 ;
b101 <
b1010 .
b1010 $
b1010 *
b1010 (
#3110
b11010 !
b11010 +
b1010 :
b111 =
b10 ;
b1101 <
b1011 .
b1011 $
b1011 *
b1011 (
#3120
b11011 !
b11011 +
b1011 :
b100 =
04
b1100 ;
b11 <
b1100 .
b1100 $
b1100 *
b1100 (
#3130
b11100 !
b11100 +
b1100 :
b111 =
12
b100 ;
b1011 <
b1101 .
b1101 $
b1101 *
b1101 (
#3140
b11101 !
b11101 +
b1101 :
b110 =
02
b1000 ;
b111 <
b1110 .
b1110 $
b1110 *
b1110 (
#3150
b11110 !
b11110 +
b1110 :
b111 =
b0 ;
b1111 <
b1111 .
b1111 $
b1111 *
b1111 (
#3160
0Q
b0 ,
0/
b0 `
b1111 :
b0 =
0S
b11111 !
b11111 +
b1 ]
b1111 ;
b0 <
b1000 ^
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#3170
b1 `
1S
b10 ]
1Q
b1 ,
1/
b100000 !
b100000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#3180
b100001 !
b100001 +
b1 :
b110 =
02
05
09
14
18
b1011 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#3190
b100010 !
b100010 +
b10 :
b111 =
b11 ;
b1100 <
b11 .
b10011 $
b10011 *
b10011 (
#3200
b0 `
0S
b1 ]
0Q
b0 ,
0/
b10000 !
b10000 +
b0 :
b0 =
04
08
b0 ;
b0 <
b0 .
b0 P
b0 -
b1 O
b0 $
b0 *
b10000 #
b10000 )
b10000 '
b0 (
#3210
b10001 !
b10001 +
b1 :
b1000 ;
b1 .
b1 $
b1 *
b1 (
#3220
b10010 !
b10010 +
b10 :
b100 ;
b10 .
b10 $
b10 *
b10 (
#3230
b10011 !
b10011 +
b11 :
b1100 ;
b11 .
b11 $
b11 *
b11 (
#3240
b10100 !
b10100 +
b100 :
b10 ;
b100 .
b100 $
b100 *
b100 (
#3250
b10101 !
b10101 +
b101 :
b1010 ;
b101 .
b101 $
b101 *
b101 (
#3260
b10110 !
b10110 +
b110 :
b110 ;
b110 .
b110 $
b110 *
b110 (
#3270
b10111 !
b10111 +
b111 :
b1110 ;
b111 .
b111 $
b111 *
b111 (
#3280
b11000 !
b11000 +
b1000 :
b1 ;
b1000 .
b1000 $
b1000 *
b1000 (
#3290
b11001 !
b11001 +
b1001 :
b1001 ;
b1001 .
b1001 $
b1001 *
b1001 (
#3300
b11010 !
b11010 +
b1010 :
b101 ;
b1010 .
b1010 $
b1010 *
b1010 (
#3310
b11011 !
b11011 +
b1011 :
b1101 ;
b1011 .
b1011 $
b1011 *
b1011 (
#3320
b11100 !
b11100 +
b1100 :
b11 ;
b1100 .
b1100 $
b1100 *
b1100 (
#3330
b11101 !
b11101 +
b1101 :
b1011 ;
b1101 .
b1101 $
b1101 *
b1101 (
#3340
b11110 !
b11110 +
b1110 :
b111 ;
b1110 .
b1110 $
b1110 *
b1110 (
#3350
b11111 !
b11111 +
b1111 :
b1111 ;
b1111 .
b1111 $
b1111 *
b1111 (
#3360
b0 :
b100000 !
b100000 +
b10 ]
b1 `
b0 ;
b0 ^
b1000 _
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#3370
b100001 !
b100001 +
b1 :
b1000 ;
b1 .
b10001 $
b10001 *
b10001 (
#3380
b100010 !
b100010 +
b10 :
b100 ;
b10 .
b10010 $
b10010 *
b10010 (
#3390
b100011 !
b100011 +
b11 :
b1100 ;
b11 .
b10011 $
b10011 *
b10011 (
#3400
b1 :
b10001 !
b10001 +
b1 ]
b0 `
b1000 ;
b1000 ^
b0 _
b0 .
b0 P
b1 -
b0 $
b0 *
b10001 #
b10001 )
b10001 '
b0 (
#3410
b10010 !
b10010 +
b10 :
b1 =
b0 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#3420
b10011 !
b10011 +
b11 :
b0 =
b1100 ;
b0 <
b10 .
b10 $
b10 *
b10 (
#3430
b10100 !
b10100 +
b100 :
b11 =
12
b100 ;
b1000 <
b11 .
b11 $
b11 *
b11 (
#3440
b10101 !
b10101 +
b101 :
b0 =
02
b1010 ;
b0 <
b100 .
b100 $
b100 *
b100 (
#3450
b10110 !
b10110 +
b110 :
b1 =
b10 ;
b1000 <
b101 .
b101 $
b101 *
b101 (
#3460
b10111 !
b10111 +
b111 :
b0 =
b1110 ;
b0 <
b110 .
b110 $
b110 *
b110 (
#3470
b11000 !
b11000 +
b1000 :
b111 =
12
15
b110 ;
b1000 <
b111 .
b111 $
b111 *
b111 (
#3480
b11001 !
b11001 +
b1001 :
b0 =
02
05
b1001 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#3490
b11010 !
b11010 +
b1010 :
b1 =
b1 ;
b1000 <
b1001 .
b1001 $
b1001 *
b1001 (
#3500
b11011 !
b11011 +
b1011 :
b0 =
b1101 ;
b0 <
b1010 .
b1010 $
b1010 *
b1010 (
#3510
b11100 !
b11100 +
b1100 :
b11 =
12
b101 ;
b1000 <
b1011 .
b1011 $
b1011 *
b1011 (
#3520
b11101 !
b11101 +
b1101 :
b0 =
02
b1011 ;
b0 <
b1100 .
b1100 $
b1100 *
b1100 (
#3530
b11110 !
b11110 +
b1110 :
b1 =
b11 ;
b1000 <
b1101 .
b1101 $
b1101 *
b1101 (
#3540
b11111 !
b11111 +
b1111 :
b0 =
b1111 ;
b0 <
b1110 .
b1110 $
b1110 *
b1110 (
#3550
b1 `
1S
b10 ]
1Q
b1 ,
1/
b100000 !
b100000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b1111 .
b1111 $
b1111 *
b1111 (
#3560
0Q
b0 ,
0/
b1 :
b0 =
02
05
09
0S
b100001 !
b100001 +
b10 ]
b1000 ;
b0 <
b0 ^
b1000 _
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#3570
b100010 !
b100010 +
b10 :
b1 =
b0 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#3580
b100011 !
b100011 +
b11 :
b0 =
b1100 ;
b0 <
b10 .
b10010 $
b10010 *
b10010 (
#3590
b100100 !
b100100 +
b100 :
b11 =
12
b100 ;
b1000 <
b11 .
b10011 $
b10011 *
b10011 (
#3600
b10 :
b10010 !
b10010 +
b1 ]
b0 `
b0 =
02
b1000 ^
b0 _
b0 <
b0 .
b0 P
b10 -
b0 $
b0 *
b10010 #
b10010 )
b10010 '
b0 (
#3610
b10011 !
b10011 +
b11 :
b1100 ;
b1 .
b1 $
b1 *
b1 (
#3620
b10100 !
b10100 +
b100 :
b10 =
b0 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#3630
b10101 !
b10101 +
b101 :
b1000 ;
b11 .
b11 $
b11 *
b11 (
#3640
b10110 !
b10110 +
b110 :
b0 =
b110 ;
b0 <
b100 .
b100 $
b100 *
b100 (
#3650
b10111 !
b10111 +
b111 :
b1110 ;
b101 .
b101 $
b101 *
b101 (
#3660
b11000 !
b11000 +
b1000 :
b110 =
14
b10 ;
b100 <
b110 .
b110 $
b110 *
b110 (
#3670
b11001 !
b11001 +
b1001 :
b1010 ;
b111 .
b111 $
b111 *
b111 (
#3680
b11010 !
b11010 +
b1010 :
b0 =
04
b101 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#3690
b11011 !
b11011 +
b1011 :
b1101 ;
b1001 .
b1001 $
b1001 *
b1001 (
#3700
b11100 !
b11100 +
b1100 :
b10 =
b1 ;
b100 <
b1010 .
b1010 $
b1010 *
b1010 (
#3710
b11101 !
b11101 +
b1101 :
b1001 ;
b1011 .
b1011 $
b1011 *
b1011 (
#3720
b11110 !
b11110 +
b1110 :
b0 =
b111 ;
b0 <
b1100 .
b1100 $
b1100 *
b1100 (
#3730
b11111 !
b11111 +
b1111 :
b1111 ;
b1101 .
b1101 $
b1101 *
b1101 (
#3740
b1 `
1S
b10 ]
1Q
b1 ,
1/
b100000 !
b100000 +
b0 :
b110 =
14
18
b11 ;
b100 <
b1110 .
b1110 $
b1110 *
b1110 (
#3750
b100001 !
b100001 +
b1 :
b1011 ;
b1111 .
b1111 $
b1111 *
b1111 (
#3760
0Q
b0 ,
0/
b10 :
b0 =
04
08
0S
b100010 !
b100010 +
b10 ]
b100 ;
b0 <
b0 ^
b1000 _
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#3770
b100011 !
b100011 +
b11 :
b1100 ;
b1 .
b10001 $
b10001 *
b10001 (
#3780
b100100 !
b100100 +
b100 :
b10 =
b0 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#3790
b100101 !
b100101 +
b101 :
b1000 ;
b11 .
b10011 $
b10011 *
b10011 (
#3800
b11 :
b0 =
b10011 !
b10011 +
b1 ]
b0 `
b1100 ;
b0 <
b1000 ^
b0 _
b0 .
b0 P
b11 -
b0 $
b0 *
b10011 #
b10011 )
b10011 '
b0 (
#3810
b10100 !
b10100 +
b100 :
b11 =
12
b100 ;
b1000 <
b1 .
b1 $
b1 *
b1 (
#3820
b10101 !
b10101 +
b101 :
b10 =
02
b1000 ;
b100 <
b10 .
b10 $
b10 *
b10 (
#3830
b10110 !
b10110 +
b110 :
b11 =
b0 ;
b1100 <
b11 .
b11 $
b11 *
b11 (
#3840
b10111 !
b10111 +
b111 :
b0 =
b1110 ;
b0 <
b100 .
b100 $
b100 *
b100 (
#3850
b11000 !
b11000 +
b1000 :
b111 =
12
15
b110 ;
b1000 <
b101 .
b101 $
b101 *
b101 (
#3860
b11001 !
b11001 +
b1001 :
b110 =
02
05
14
b1010 ;
b100 <
b110 .
b110 $
b110 *
b110 (
#3870
b11010 !
b11010 +
b1010 :
b111 =
b10 ;
b1100 <
b111 .
b111 $
b111 *
b111 (
#3880
b11011 !
b11011 +
b1011 :
b0 =
04
b1101 ;
b0 <
b1000 .
b1000 $
b1000 *
b1000 (
#3890
b11100 !
b11100 +
b1100 :
b11 =
12
b101 ;
b1000 <
b1001 .
b1001 $
b1001 *
b1001 (
#3900
b11101 !
b11101 +
b1101 :
b10 =
02
b1001 ;
b100 <
b1010 .
b1010 $
b1010 *
b1010 (
#3910
b11110 !
b11110 +
b1110 :
b11 =
b1 ;
b1100 <
b1011 .
b1011 $
b1011 *
b1011 (
#3920
b11111 !
b11111 +
b1111 :
b0 =
b1111 ;
b0 <
b1100 .
b1100 $
b1100 *
b1100 (
#3930
b1 `
1S
b10 ]
1Q
b1 ,
1/
b100000 !
b100000 +
b0 :
b111 =
12
15
19
b111 ;
b1000 <
b1101 .
b1101 $
b1101 *
b1101 (
#3940
b100001 !
b100001 +
b1 :
b110 =
02
05
09
14
18
b1011 ;
b100 <
b1110 .
b1110 $
b1110 *
b1110 (
#3950
b100010 !
b100010 +
b10 :
b111 =
b11 ;
b1100 <
b1111 .
b1111 $
b1111 *
b1111 (
#3960
0Q
b0 ,
0/
b11 :
b0 =
04
08
0S
b100011 !
b100011 +
b10 ]
b1100 ;
b0 <
b0 ^
b1000 _
b0 .
b1 P
b10000 $
b10000 *
b10000 (
#3970
b100100 !
b100100 +
b100 :
b11 =
12
b100 ;
b1000 <
b1 .
b10001 $
b10001 *
b10001 (
#3980
b100101 !
b100101 +
b101 :
b10 =
02
b1000 ;
b100 <
b10 .
b10010 $
b10010 *
b10010 (
#3990
b100110 !
b100110 +
b110 :
b11 =
b0 ;
b1100 <
b11 .
b10011 $
b10011 *
b10011 (
#4000
b10100 '
b10100 (
